<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com"/>
    <!-- 启用cglib代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 启用定时任务 -->
    <task:annotation-driven/>
    <!-- 启用注解 -->
    <mvc:annotation-driven/>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/*"/>
            <mvc:exclude-mapping path="/authorize"/>
            <bean class="com.filter.RESTAuthorizeFilter"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 自动读取配置的功能模块 -->
    <bean id="setting" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>

    <!-- 提供配置注入的功能模块，支持读取环境变量 -->
    <bean id="config" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!-- 优先以环境变量覆盖配置文件 -->
        <property name="systemPropertiesMode" value="2"/>
        <!-- 配置来源 -->
        <property name="properties" ref="setting"/>
    </bean>

    <!-- 配置数据源 -->
    <!-- spring自带实现没有连接池管理能力，只是单纯地在需要时启动了一个连接，高负载时需要注意 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${DataSource.driverName}"/>
        <property name="url" value="${DataSource.url}"/>
        <property name="username" value="${DataSource.userName}"/>
        <property name="password" value="${DataSource.password}"/>
    </bean>
    <bean id="persistenceProvider" class="org.hibernate.jpa.HibernatePersistenceProvider"/>

    <!-- 启用JPA管理 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!-- 使用Spring管理，以支持配置注入 -->
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceXmlLocation" value="META-INF/persistence.xml"/>
        <property name="persistenceUnitName" value="persistenceUnit"/>
        <property name="persistenceProvider" ref="persistenceProvider"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <!--<prop key="hibernate.dialect.storage_engine">innodb</prop>-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL55Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 上传文件解析器 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <!-- 上传文件的最大值，单位字节-->
        <property name="maxUploadSize" value="${Upload.maxUploadSize}"/>
        <!-- 内存占用最大值，默认10240，5MB -->
        <property name="maxInMemorySize" value="${Upload.maxInMemorySize}"/>
        <!-- 临时文件目录，默认为Web容器默认临时目录 -->
        <property name="uploadTempDir" value="${Upload.directory}"/>
        <!-- 请求编码格式 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 延迟文件解析，可用于判断文件大小、获取名称等操作 -->
        <property name="resolveLazily" value="true"/>
    </bean>

    <!-- spring数据验证器 -->
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>

</beans>